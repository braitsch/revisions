<?xml version="1.0" encoding="UTF-8"?>
<project name="AIR 3.1 Build File" default="*. Debug Air Application">
	
	<!--external prop files -->
    <property file="./ant/proj.properties" description="project specific properties" />
	<property file="./ant/cert.properties" description="creates a temp cert for testing" />
	
	<!-- path to flex sdk & friends -->
	<property name="sdk" value="/Users/braitsch/Code/flash/libs/flex_sdk_4.6.0.23201B" />
	<property name="mxmlc" value="${sdk}/lib/mxmlc.jar" />
	<property name="adl" value="${sdk}/bin/adl" />
	<property name="adt" value="${sdk}/lib/adt.jar" />
		
    <target name="1. Clean Targets" description="deletes and recreates the build and release dirs">
        <delete dir="bin" failOnError="false" includeEmptyDirs="true" />
        <mkdir dir="bin" />
    	<copy todir="bin/sh"><fileset dir="air/sh"/></copy>
    	<copy todir="bin/py"><fileset dir="air/py"/></copy>	
    	<copy todir="bin/icons"><fileset dir="air/icons"/></copy>
    	<copy todir="bin"><fileset file="git/tar/git-1.7.7.1.tar.gz"/></copy>
    	<copy todir="bin"><fileset file="air/Revisions-app.xml"/></copy>
		<chmod perm="777"><fileset dir="bin"></fileset></chmod>
    </target>	
    	
	<!-- Compile debug SWF and run it -->
	<target name="*. Debug Air Application">
		<property name="debug" value="true" />		
		<antcall target="2. Compile SWF"/>	
		<exec executable="${adl}">
			<arg value="${air_descriptor}" />
			<arg value="bin" />
		</exec>				
	</target>	
	
	<!-- resets dirs, compiles & packages air application & digital cert for release -->
    <target name="*. Compile Package and Release" >
		<property name="debug" value="false" />
		<antcall target="2. Compile SWF"/>	
    	<antcall target="3. Package to AIR Application"/>
    	<antcall target="4. Package to Native Installer AIR > DMG"/>    	
		<antcall target="5. Write To Log"/>
    </target>	
	
	<target name="compile-test">
		<fdt.launch.application
			projectname="${project_name}" 
			mainclass="./src/AppMain.as" 
			target="./bin/${project_name}.swf" />
		<fdt.launch.library 
			projectname="${project_name}" 
			target="./swc/revisions-assets.swc" />
	</target>	
	
	<target name="2. Compile SWF" depends="1. Clean Targets">
		<echo>debug = ${debug}</echo>
		<java jar="${mxmlc}" fork="true" failonerror="true">
			<arg value="-debug=${debug}" />
			<arg value="+flexlib=${sdk}/frameworks" />
			<arg value="+configname=air" />
			<arg value="-swf-version=13" />			
			<arg value="-incremental=true" />
			<arg value="-file-specs=./src/AppMain.as" />
			<arg value="-source-path=./libs" />			
			<arg value="-library-path+=./swc/revisions-assets.swc" />
			<arg value="-output=bin/${project_name}.swf" />
		</java>
	</target>			
	
    <target name="3. Package to AIR Application"
        description="packages the build SWF and ADL cert into a .air file">
        <java jar="${adt}" fork="true" failonerror="true" maxmemory="512m">
            <arg value="-package"/>
            <arg value="-storetype"/>
            <arg value="pkcs12"/>
            <arg value="-keystore"/>
            <arg value="${keystore}"/>
            <arg value="-storepass"/>
            <arg value="${cert_password}"/>
            <arg value="release/${project_name}.air"/>
            <arg value="${air_descriptor}"/>
            <arg value="-C"/>
            <arg value="bin"/>
            <arg value="."/>
        </java>
    </target>	
	
    <target name="4. Package to Native Installer AIR > DMG">
        <java jar="${adt}" fork="true" failonerror="true" maxmemory="512m">
            <arg value="-package"/>        	
            <arg value="-target"/> 
        	<arg value="native"/> 
            <arg value="${deploy_dir}/${project_name}-${project_version}.dmg"/>
            <arg value="release/${project_name}.air"/>            	
        </java>
    </target>	
	
	<!-- Generate Air Certificate -->	
   
    <target name="XX. Generate Certificate" depends="XX. Generate Timestamp"
    	description="generates the ADL certificate based on unique timestamp" >   	
        <java jar="${adt}" fork="true" failonerror="true">
            <arg value="-certificate"/>
            <arg value="-cn"/>
            <arg value="${cert_name}"/>
            <arg value="-ou"/>
            <arg value="${cert_org_unit}"/>
            <arg value="-o"/>
            <arg value="${cert_org_name}"/>
            <arg value="-c"/>
            <arg value="US"/>
            <arg value="2048-RSA"/>
            <arg value="certs/${timestamp}.p12"/>
            <arg value="${cert_password}"/>
        </java>
    </target>	
	
    <target name="XX. Generate Timestamp" >	
		<tstamp><format property="timestamp" pattern="MMMM-d-yyyy-hhmmaa" locale="en,US" /></tstamp>
    	<echo>generating timestamp ${timestamp}</echo>
    </target>	
	
	<!-- When calling this, I believe we have to create a new .air with the new certificate  
		and then merge it with the old .air file that was created with the old certifcate -->		
	
	<target name="XX. Migrate AIR Certificate"
        description="Only call this when the certificate has changed">
		<java jar="${adt}" fork="true" failonerror="true"> 
			<arg value="-migrate"/> 
			<arg value="-storetype"/>
			<arg value="pkcs12"/>
			<arg value="-keystore"/>
			<arg value="${keystore}"/>
			<arg value="-storepass"/>
			<arg value="${cert_password}"/>	
			<arg value="release/${project_name}-old.air"/> 
			<arg value="release/${project_name}-new.air"/> 
		</java> 
	</target>			
	
	<!-- Write to log file -->		

	<target name="5. Write To Log" description="write to a log file each time we compile">
		<echo>Updating Log</echo>
			<tstamp>
				<format property="timestamp" pattern="MM/dd/yyyy hh:mm aa" locale="en,US" />
			</tstamp>
			<length property="filesize" mode="all">
				<fileset file="bin/${project_name}.swf" />
			</length>
			<echo file="log/output.txt" >Author: Stephen Braitsch
Date: ${timestamp}${line.separator}
Project Name: ${project_name}
Filesize: ${filesize} Bytes
Build Type: ${debug}${line.separator}
Target Air Version: ${target_air_version}
Built On: ${os.name} ${os.version}</echo>
	</target> 	

</project>